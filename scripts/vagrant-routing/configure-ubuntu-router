#!/bin/bash

LAN_IP_PREFIX_DC1="20.0.0"
LAN_IP_PREFIX_DC2="30.0.0"

function print_usage {
  echo
  echo "Usage: configure-ubuntu-router [OPTIONS]"
  echo
  echo "This script can be used to configure a local Vagrant Ubuntu 18.04 (Bionic) VM to act as a local VM network router (currently 2 subnets only)."
  echo
  echo " Note: This is for local testing environments only as this allows ipv4 port forwarding, disables UFW, and forwards traffic based on LAN prefix only."
  echo
  echo
  echo "Options:"
  echo
  echo -e "  --local-lan-one\t\t\t  The version of Consul to install. Optional. Default: $LAN_IP_PREFIX_DC1.0/16."
  echo -e "  --local-lan-two\t\t\t  The version of Consul to install. Optional. Default: $LAN_IP_PREFIX_DC2.0/16."
  echo
  echo "Examples:"
  echo
  echo "  Configuring local lan routing between $LAN_IP_PREFIX_DC1.0/16 and $LAN_IP_PREFIX_DC2.0/16"
  echo "    configure-ubuntu-router --local-lan-one $LAN_IP_PREFIX_DC1 --local-lan-two $LAN_IP_PREFIX_DC2"
  echo
}

function log {
  local -r level="$1"
  local -r message="$2"
  local -r timestamp=$(date +"%Y-%m-%d %H:%M:%S")
  >&2 echo -e "${timestamp} [${level}] [$SCRIPT_NAME] ${message}"
}

function log_info {
  local -r message="$1"
  log "INFO" "$message"
}

function log_warn {
  local -r message="$1"
  log "WARN" "$message"
}

function log_error {
  local -r message="$1"
  log "ERROR" "$message"
}

function assert_not_empty {
  local -r arg_name="$1"
  local -r arg_value="$2"

  if [[ -z "$arg_value" ]]; then
    log_error "The value for '$arg_name' cannot be empty"
    print_usage
    exit 1
  fi
}

function assert_is_installed {
  local -r name="$1"

  if [[ ! $(command -v ${name}) ]]; then
    log_error "The binary '$name' is required by this script but is not installed or in the system's PATH."
    exit 1
  fi
}

function install_dependencies {
  log_info "[+] Installing dependencies...."
  sudo apt-get update
  log_info "[+] Installing Ubuntu networking dependencies..."
  sudo apt-get -y -qq install curl wget software-properties-common jq unzip traceroute nmap socat netcat
  log_info "[+] Installing iptables-persistent...."
  sudo apt-get update && sudo apt-get -y -qq iptables-persistent
}

function configure_vagrant_router {
  local -r local_lan_one="$1"
  local -r local_lan_two="$2"

  log_info "[+] Configuring iptables for localhost ethernet adapters...."
  sudo iptables -A FORWARD -i eth1 -j ACCEPT
  sudo iptables -A FORWARD -i eth2 -j ACCEPT
  sudo iptables -A FORWARD -i eth3 -j ACCEPT
  log_info "[+] Removing default gateway via 10.0.2.2...."
  sudo ip route del default via 10.0.2.2
  log_info "[+] Saving iptables configurations...."
  sudo echo -e 'y\ny\n' | sudo iptables-save
  log_info "[+] Disabling Ubuntu UFW...."
  sudo ufw disable
}

function run_router_config {
  local local_lan_one="$LAN_IP_PREFIX_DC1"
  local local_lan_two="$LAN_IP_PREFIX_DC2"

  while [[ $# -gt 0 ]]; do
    local key="$1"

    case "$key" in
      --local-lan-one)
        assert_not_empty "$key" "$2"
        local_lan_one="$2"
        shift
        ;;
      --local-lan-two)
        assert_not_empty "$key" "$2"
        local_lan_two="$2"
        shift
        ;;
      --help)
        print_usage
        exit
        ;;
      *)
        log_error "Unrecognized argument: $key"
        print_usage
        exit 1
        ;;
    esac

    shift
  done

  log_info "[+] Starting Ubuntu Router Configuration"
  install_dependencies
  log_info "[+] Verifying dependencies..."
  assert_is_installed "curl"
  assert_is_installed "wget"
  assert_is_installed "jq"
  assert_is_installed "unzip"
  assert_is_installed "traceroute"
  assert_is_installed "nmap"
  assert_is_installed "socat"
  assert_is_installed "iptables-save"
  configure_vagrant_router "$local_lan_one" "$local_lan_two"
  log_info "[+] Ubuntu Router Configuration Complete!"
}

run_router_config "$@"